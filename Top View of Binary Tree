Q Link: https://practice.geeksforgeeks.org/problems/top-view-of-binary-tree/1

class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        //Your code here
        vector<int> topArray; 
        if(root == NULL)return topArray;
        map<int, int> lastnode;
         queue<pair<Node*, int>> q;
        q.push({root, 0});
        while(!q.empty()){
            int n = q.size(); 
            for(int i = 0; i< n ; i++){
                Node* curr = q.front().first; 
                int hd = q.front().second; 
                q.pop();
                if(lastnode.find(hd) == lastnode.end()){
                    lastnode[hd] = curr->data;
                }
                if(curr->left)q.push({curr->left, hd-1});
                if(curr->right)q.push({curr->right, hd + 1});
            }
        }
        for(auto t : lastnode){
             topArray.push_back(t.second);
        }
         return topArray;
    }

};
