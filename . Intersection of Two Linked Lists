Q Link: https://leetcode.com/problems/intersection-of-two-linked-lists/description/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {

        if(!headA || !headB){
            return NULL;
        }
        ListNode* a = headA; 
        ListNode* b = headB; 
        int counta = 0, countb = 0;
        while(a != NULL){
            counta++;
            a = a->next;
        }
        while(b != NULL){
            countb++;
            b = b->next;
        }
        int d = abs(counta - countb);
         a = headA; 
         b = headB;
        if(counta > countb){
            for(int i = 0; i<d ; i++){
                a = a->next;
            }
        }
        else{
             for(int i = 0; i<d ; i++){
                b = b->next;
            }
        }

        for(int i = 0; i< min(counta, countb) ; i++){
            if(a == b){
                return a;
            }
            a = a->next; 
            b = b->next;
        }

        return NULL;
        
    }
};
