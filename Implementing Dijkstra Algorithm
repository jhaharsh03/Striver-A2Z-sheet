Q Link: https://practice.geeksforgeeks.org/problems/implementing-dijkstra-set-1-adjacency-matrix/1

class Solution
{
	public:
	//Function to find the shortest distance of all the vertices
    //from the source vertex S.
    vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        // Code here
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        vector<int> dis(V);
        for(int i = 0; i<V ; i++)dis[i] = 1e9;
        dis[S] = 0;
        pq.push({0,S});
        while(!pq.empty()){
            int currdis = pq.top().first; 
            int node = pq.top().second; 
            pq.pop(); 
            for(auto t : adj[node]){
                int edge = t[1];
                int edgenode = t[0];
                if(currdis + edge < dis[edgenode]){
                    dis[edgenode] = currdis + edge;
                    pq.push({dis[edgenode], edgenode });
                }
            }
        }
        return dis;
    }
};
