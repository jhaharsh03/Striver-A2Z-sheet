Q Link: https://leetcode.com/problems/rotate-list/description/

Soln: 

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head == NULL || head->next == NULL){
            return head;
        }
        
        int curr = 1;

        ListNode* temp = head;
        while(temp->next != NULL){
            curr++;
            temp = temp->next;
        }
        temp->next = head;

        k = k%curr;
        k = curr-k; 

        while(k){
             temp = temp->next;
             k--;
        }

        head = temp->next;
        temp->next = NULL;
        
        
        return head;


        
        
    }
};
