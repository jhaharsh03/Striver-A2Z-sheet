Q Link: https://www.codingninjas.com/studio/problems/maximum-path-sum-in-the-matrix_797998?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTab=1

#include <bits/stdc++.h> 
int solve(int i, int j, vector<vector<int>> &matrix, 
vector<vector<int>>& dp){
    if(j < 0 || j >= matrix[0].size()){
        return -1e9;
    }
    if(i == 0)return matrix[0][j];
    if(dp[i][j] != -1)return dp[i][j];
    int a = matrix[i][j] + solve(i-1, j-1, matrix, dp);
    int b = matrix[i][j] + solve(i-1, j, matrix, dp);
    int c = matrix[i][j] + solve(i-1, j+1, matrix, dp);
    return dp[i][j] = max(a, max(b, c));
}
int getMaxPathSum(vector<vector<int>> &matrix)
{
    //  Write your code here.
    int n = matrix.size(), m = matrix[0].size();
    vector<vector<int>> dp(n, vector<int>(m, -1));
    int ans = -1e9;
    for(int j = 0; j<m ; j++){
        ans = max(ans, solve(n-1, j, matrix, dp));
    }
    return ans;
}
