Q Link: https://practice.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/1

class Solution {
  public:
    // Function to detect cycle in a directed graph.
    bool dfs(int V, vector<int> adj[], int vis[], int path[], int node){
        vis[node] = 1;
        path[node] = 1;
        for(auto it : adj[node]){
            if(!vis[it]){
                if(dfs(V, adj, vis, path, it) == true){
                    return true;
                }
            }
            else if(path[it]){
                return true;
            }
        }
        path[node] = 0;
        return false;
    }
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        int vis[V] = {0};
        int path[V] = {0};
        for(int i = 0; i<V ; i++){
            if(!vis[i]){
                if(dfs(V, adj, vis, path, i) == true){
                    return true;
                }
            }
        }
        return false;
    }
};
