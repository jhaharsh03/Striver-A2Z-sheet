Q Link: https://leetcode.com/problems/reverse-nodes-in-k-group/description/


class Solution {
public:

    ListNode* reverse(ListNode* first, ListNode* last){
        ListNode* pre = last;
        while(first != last){
            auto tmp = first->next;
            first->next = pre;
            pre = first;
            first = tmp;
        }
        return pre;
    }



    ListNode* reverseKGroup(ListNode* head, int k) {
        auto temp = head; 
        for(int i = 0; i< k; i++){
            if(temp == NULL){
                return head;
            }
            temp = temp->next;
        }

        auto new_head = reverse(head , temp);
        head->next = reverseKGroup(temp, k);
        return new_head;
        
    }
};
