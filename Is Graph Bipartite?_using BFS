Q Link: https://leetcode.com/problems/is-graph-bipartite/description/

class Solution {
public:
    bool istrue(vector<vector<int>>& graph, int node,vector<int>& color){
        color[node] = 0; 
        queue<int> q;
        q.push(node);
        while(!q.empty()){
            int curr = q.front();
            q.pop(); 
            for(auto t : graph[curr]){
                if(color[t] == -1){
                    color[t] = !color[curr];
                    q.push(t);
                }
                else if(color[t] == color[curr]){
                    return false;
                }
            }
        }
        return true;
    }

    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size(); 
        vector<int> color(n, -1);
        for(int i = 0; i< n ; i++){
            if(color[i] == -1){
                if(istrue(graph, i, color) == false){
                    return false;
                }
            }
        }
        return true;
    }
};
