Q Link: https://leetcode.com/problems/is-graph-bipartite/description/

class Solution {
public:
    bool dfs(vector<vector<int>>& graph, int node,vector<int>& color, int itscolor){
        color[node] = itscolor;
        for(auto t : graph[node]){
            if(color[t] == -1){
                if(dfs(graph, t, color, !color[node]) == false){
                    return false;
                }
            }
            else if(color[t] == color[node]){
                return false;
            }
        } 
       
        return true;
    }

    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size(); 
        vector<int> color(n, -1);
        for(int i = 0; i< n ; i++){
            if(color[i] == -1){
                if(dfs(graph, i, color, 0) == false){
                    return false;
                }
            }
        }
        return true;
    }
};
