Q Link: https://practice.geeksforgeeks.org/problems/alien-dictionary/1

 public: 
    vector<int> toposort(int V, vector<int> adj[]){
        int indegree[V] = {0};
        for(int i = 0; i<V ; i++){
            for(auto it : adj[i]){
                indegree[it]++;
            }
        }
        queue<int> q; 
        for(int i = 0; i<V; i++){
            if(indegree[i] == 0){
                q.push(i);
            }
        }
        vector<int> topo; 
        while(!q.empty()){
            int node = q.front(); 
            q.pop();
            topo.push_back(node);
            for(auto t : adj[node]){
                indegree[t]--;
                if(indegree[t] == 0){
                    q.push(t);
                }
            }
        }
        return topo;
    }
    public:
    
    string findOrder(string dict[], int N, int k) {
        //code here
        vector<int> adj[k];
        for(int i = 0; i<N-1; i++){
            string s1 = dict[i];
            string s2 = dict[i+1];
            int len = min(s1.size(), s2.size());
            for(int ptr = 0; ptr < len ; ptr++){
                if(s1[ptr] != s2[ptr]){
                    adj[s1[ptr]-'a'].push_back(s2[ptr]-'a');
                    break;
                }
            }
        }
        
        vector<int> topo = toposort(k, adj);
        string ans = "";
        for(auto it : topo){
            ans = ans + char(it + 'a');
        }
        return ans;
        
        
        
    }
};
